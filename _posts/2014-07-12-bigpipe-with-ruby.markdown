---
layout: post
title:  "使用Ruby实现BigPipe"
date:   2014-07-12 15:31:01
categories: ruby
---

试想这样一个场景，一个经常访问的网站，每次打开它的页面都要要花费6 秒；同时另外一个网站提供了相似的服务，但响应时间只需3 秒，那么你会如何选择呢？数据表明，如果用户打开一个网站，等待3~4 秒还没有任何反应，他们会变得急躁，焦虑，抱怨，甚至关闭网页并且不再访问，这是非常糟糕的情况。所以，网页加载的速度十分重要,尤其对于拥有大量用户的大型网站，有着大量并发请求、海量数据等客观情况，速度就成了必须攻克的难题之一。

###BigPipe的技术背景
2010 年初的时候，Facebook 的前端性能研究小组开始了他们的优化项目，经过了六个月的努力，成功的将个人空间主页面加载耗时由原来的5 秒减少为现在的2.5 秒。这是一个非常了不起的成就，也给用户来带来了很好的体验。在优化项目中，Facebook的高级研究科学家蒋长浩(Changhao Jiang)博士提出了一种新的页面加载技术，称之为Bigpipe。

###传统的页面加载模型
首先，我们来看一个传统页面的加载流程。一个动态页面从用户请求开始到最终渲染结束大致分成以下几个步骤：

1. 用户访问网页，浏览器发送一个HTTP请求到网络服务器
2. 服务器解析这个请求，然后从存储层取得数据，经过一系列复杂的处理生成一个html文件内容，并在一个HTTP Response 中把它传送给客户端
3. HTTP response 在网络中传输
4. 浏览器解析这个Response ，创建一个DOM树，然后下载所需的CSS和JS文件
5. 下载完CSS文件后，浏览器解析他们并且应用在相应的内容上
6. 下载完JS后，浏览器解析和执行他们

